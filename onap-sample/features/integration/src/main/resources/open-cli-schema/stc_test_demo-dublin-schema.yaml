# Copyright 2019
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

open_cli_schema_version: 1.0
name: stc_test_demo
description: |
A demo that shows the workflow of Automation test  for VNF's functionality

In this demo it uses the network service that contains 3 VNFs, stcv01 (Spirent Testcenter virtual) , stcv02 as the test instrument and OpenWrt as the SUT.
On every execution, the NS and the VNFs will be onboarded,  created and instantiated. 
Then the script will control stcv01 and stcv02 sending traffic forwarded by OpenWrt to test layer3 traffic forwarding functionality of OpenWrt.
On every execution, it reports a test result pass or fail which is based on the traffic test result, 
for example , the packet loss in forwarding is less than 10%, then the test result is Pass.

  prerequisites
  -------------
  1. Setup the OCOMP profile to configure the ONAP service URL and creadentials as given below

  a. Run command 'oclip' to go to OCOMP interactive mode

  b. Type 'use onap-dublin' to choose the onap-dublin product

  c. Type 'profile onap-dublin' to create or to use existing onap-dublin profile

  d. Set following entries:
    set sdc.onboarding:host-url=http://159.138.8.8:30280
    set sdc.catalog:host-url=http://159.138.8.8:30205
    set aai:host-url=https://159.138.8.8:30233
    set aai:host-username=AAI
    set aai:host-password=AAI
    set vfc:host-url=http://159.138.8.8:30280
    set multicloud:host-url=http://159.138.8.8:30280


    NOTE:
    By default, SDC onboarding service does not provide node port, which is available to access from external ONAP network.
    so to enable for external access, register the SDC onboarding service into MSB and use MSB url for sdc.onboarding:host-url.

      oclip --product onap-dublin microservice-create --host-url http://159.138.8.8:30280 --service-name sdcob --service-version v1.0 --service-url /onboarding-api/v1.0 --path /onboarding-api/v1.0  --node-ip 172.16.1.0 --node-port 8081

      oclip --product onap-dublin microservice-create --host-url http://159.138.8.8:30280 --service-name sdcobs --service-version v1.0 --service-url /onboarding-api/v1.0 --path /onboarding-api/v1.0  --node-ip 172.16.1.0 --node-port 8445 --enable-ssl

      Find out SDC onboarding service IP and port details as given here:
        [root@onap-dublin-vfw-93996-50c1z ~]# kubectl get pods -n onap -o wide | grep sdc-onboarding-be
        dev-sdc-sdc-onboarding-be-5564b877c8-vpwr5                        2/2     Running            0          29d   172.16.1.0     192.168.2.163   <none>           <none>
        dev-sdc-sdc-onboarding-be-cassandra-init-mtvz6                    0/1     Completed          0          29d   172.16.0.220   192.168.2.163   <none>           <none>
        [root@onap-dublin-vfw-93996-50c1z ~]#

        Note down the IP address for sdc-onboarding-be 172.16.1.0

        [root@onap-dublin-vfw-93996-50c1z ~]# kubectl get services -n onap -o wide | grep sdc-onboarding-be
        sdc-onboarding-be                                           ClusterIP      10.247.198.92    <none>                                 8445/TCP,8081/TCP                                             29d   app=sdc-onboarding-be,release=dev-sdc
        [root@onap-dublin-vfw-93996-50c1z ~]#

        Note down the port for sdc-onboarding-be 8445 8081

        Similarly, other service IP and Port could be discovered like above, in case not know earlier :)

     This profile would be used while running the command with ONAP setup configured in it, as below
       oclip --profile onap-dublin vnf-tosca-lcm .....

  e. Verify these details once by typing 'set'

  f. Exit from the interactive console by typing 'exit'

  2. Setup SDC consumer
    oclip --product onap-dublin --profile onap-dublin sdc-consumer-create --consumer-name ocomp

  3. Update the cloud and vnfm driver details in the configuration file $OPEN_CLI_HOME/conf/vnf-tosca-provision.json

  4. A labserver which is used for Spirent Testcenter REST API calling and a Spirent License server has valid Testcenter license need to be deployed before executing.

info:
  product: onap-dublin
  service: vnf-validation
  author: ONAP VTP Team

parameters:
  - name: config_json
    description: Configuration file path
    type: string
    short_option: c
    long_option: config_json
    default_value: $s{env:OPEN_CLI_HOME}/conf/stc_test_demo.json
    is_optional: false
  - name: result-json
    description: VNF Vendor Name
    type: string
    short_option: j
    long_option: result-json
    is_optional: false



results:
  direction: portrait
  attributes:
    - name: Test_result
      description: test result pass or fail
      scope: short
      type: string


cmd:
  command:
    -  python3 $s{env:OPEN_CLI_HOME}/script/stc_test_demo.py --conf ${config_json} --result-json $s{tmp:result.json}
  success_codes:
    - 0
  working_directory: .
  output: $s{tmp:result.json}
  result_map:
    Test_result: $o{$.Test_result}

